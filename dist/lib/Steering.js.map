{"version":3,"sources":["../../src/lib/Steering.js"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IAEqB;AACnB,WADmB,YACnB,CAAY,IAAZ,EAAkB,KAAlB,EAAyB,IAAzB,EAA+B,OAA/B,EAAwC;0BADrB,cACqB;;AAEtC,QAAG,SAAS,SAAT,EAAoB;AACrB,YAAM,IAAI,KAAJ,CAAU,uDAAsD,mDAAtD,CAAhB,CADqB;KAAvB;AAGA,QAAG,OAAO,IAAP,KAAgB,QAAhB,EAA0B;AAC3B,YAAM,IAAI,KAAJ,CAAU,+DAA8D,mDAA9D,CAAhB,CAD2B;KAA7B;;AAIA,SAAK,UAAL,GAAkB,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB,CAAlB,CATsC;AAUtC,SAAK,KAAL,GAAa,KAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,CAAb,CAVsC;;AAYtC,SAAK,IAAL,GAAY,SAAS,SAAT,GAAsB,8BAAoB,IAApB,EAA0B,KAA1B,EAAiC,QAAQ,SAAR,EAAmB,QAAQ,gBAAR,CAA1E,GACA,SAAS,UAAT,GAAsB,+BAAqB,IAArB,EAA2B,KAA3B,EAAkC,QAAQ,SAAR,EAAmB,QAAQ,gBAAR,CAA3E,GACA,SAAS,OAAT,GAAsB,4BAAkB,IAAlB,EAAwB,KAAxB,EAA+B,OAA/B,CAAtB,GACA,SAAS,MAAT,GAAqB,2BAAiB,IAAjB,EAAuB,KAAvB,EAA8B,OAA9B,CAArB,GACA,IAAI,KAAJ,CAAU,kBAAV,CADA,CAf0B;GAAxC;;eADmB;;iCAqBN;;AAEX,cAAQ,GAAR,CAAY,iBAAZ,EAFW;AAGX,WAAK,UAAL,GAAkB,IAAI,iBAAK,UAAL,CAAgB,EAAC,gBAAgB,aAAhB,EAArB,CAAlB,CAHW;;AAKX,cAAQ,GAAR,CAAY,sBAAZ,EALW;AAMX,WAAK,UAAL,CAAgB,OAAhB,GANW;;AAQX,WAAK,UAAL,CAAgB,EAAhB,CAAmB,SAAnB,EAA8B,YAAM;AAClC,gBAAQ,GAAR,CAAY,YAAZ,EADkC;OAAN,CAA9B,CARW;;;;0BAaP,OAAO;;AAEX,UAAG,KAAK,IAAL,YAAqB,KAArB,EAA4B;AAC7B,cAAM,KAAK,IAAL,CADuB;OAA/B;;AAIA,cAAQ,GAAR,CAAY,OAAZ,EANW;AAOX,WAAK,UAAL,CAAgB,EAAhB,CAAmB,OAAnB,EAA4B,KAAK,IAAL,CAAU,IAAV,CAA5B,CAPW;;;;SAlCM","file":"Steering.js","sourcesContent":["import AchtungSteering from './AchtungSteering';\nimport JoystickSteering from './JoystickSteering';\nimport AngleSteering from './AngleSteering';\nimport GrabSteering from './GrabSteering';\nimport leap from 'leapjs';\n\nexport default class LeapSteering {\n  constructor(left, right, mode, options) {\n\n    if(mode === undefined) {\n      throw new Error('A steering mode needs to be provided. Got ' + typeof mode)\n    }\n    if(typeof mode !== 'string') {\n      throw new Error('Steering mode parameter needs to be a string. Got ' + typeof mode);\n    }\n\n    this.initialize = this.initialize.bind(this);\n    this.start = this.start.bind(this);\n\n    this.mode = mode === 'Achtung'  ? new AchtungSteering(left, right, options.keyToggle, options.keypressDuration) : \n                mode === 'Joystick' ? new JoystickSteering(left, right, options.keyToggle, options.keypressDuration) :\n                mode === 'Angle'    ? new AngleSteering(left, right, options) : \n                mode === 'Grab'    ? new GrabSteering(left, right, options) : \n                new Error('No matching mode');\n\n  }\n\n  initialize() {\n\n    console.log(\"Initializing...\");\n    this.controller = new leap.Controller({frameEventName: \"deviceFrame\"});\n\n    console.log(\"Trying to connect...\");\n    this.controller.connect();\n\n    this.controller.on('connect', () => {\n      console.log(\"Connected!\")\n    });\n  }\n\n  start(frame) {\n\n    if(this.mode instanceof Error) {\n      throw this.mode;\n    }\n\n    console.log(\"Start\");\n    this.controller.on('frame', this.mode.turn);\n  }\n}"]}